# docker-compose -f .\docker-compose.yaml build
# docker-compose -f .\docker-compose.yaml up
# docker-compose -f "docker-compose.yaml" down
version: '3'

services:

#  docker service create --replicas 1 --name my-prometheus
#     --mount type=bind,source=C:/tmp/prometheus.yml,destination=/etc/prometheus/prometheus.yml
#     --publish published=9090,target=9090,protocol=tcp
#     prom/prometheus

  prometheus:
    container_name: cprom
    hostname: host-prom
    image: prom/prometheus
    # build: 
    #   context: prometheus
    #   dockerfile: Dockerfile
    privileged: true
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-lifecycle"

  # windows komutu:
  # docker run -d -p 3000:3000 --name=grafana -e "GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource" grafana/grafana
  #
  # Linux komutu:
  # docker run -d \
  #     -p 3000:3000 \
  #     --name=grafana \
  #     -e "GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource" \
  #     grafana/grafana
  grafana:
    container_name: cgrafana
    hostname: host-grafana   
    image: grafana/grafana
    privileged: true 
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - "./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml"
      - "./grafana/dashboards:/etc/grafana/provisioning/dashboards"
      - "./grafana/grafana.ini:/etc/grafana/grafana.ini"
    ports:
    - 9999:3000


#-------------------------------------------
#
#   Uygulama Metriği için NGINX-EXPORTER
#
#-------------------------------------------
# docker run -p 9113:9113 nginx/nginx-prometheus-exporter:0.10.0 -nginx.scrape-uri=http://<nginx>:8080/stub_status
  nginx:
    hostname: nginx
    container_name: ncin
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 9080:80
      - 9081:8080

  nginx-exporter:
    hostname: nginxporter
    container_name: ncinporter
    image: nginx/nginx-prometheus-exporter:0.10.0
    ports:
      - 9113:9113
    command: -nginx.scrape-uri=http://host.docker.internal:9080/metrics

#-------------------------------------------
#
#    Sistem Metriği için NODE-EXPORTER
#
#-------------------------------------------
# docker run -d \
#   --net="host" \
#   --pid="host" \
#   -v "/:/host:ro,rslave" \
#   quay.io/prometheus/node-exporter:latest \
#   --path.rootfs=/host
  
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    ports:
      - 9100:9100

